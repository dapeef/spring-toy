(()=>{"use strict";var t=function(){function t(t,i){void 0===t&&(t=0),void 0===i&&(i=0),this.x=t,this.y=i}return t.prototype.add=function(t){this.x+=t.x,this.y+=t.y},t.prototype.subtract=function(t){this.x-=t.x,this.y-=t.y},t.prototype.plus=function(i){return new t(this.x+i.x,this.y+i.y)},t.prototype.minus=function(i){return new t(this.x-i.x,this.y-i.y)},t.prototype.times=function(i){return new t(this.x*i,this.y*i)},t.prototype.length=function(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2))},t.prototype.normalize=function(){return this.times(1/this.length())},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t}(),i=function(){function i(i,s,e,n,o){void 0===i&&(i=new t(25,25)),void 0===s&&(s=1),void 0===e&&(e=1e-7),void 0===n&&(n=1),void 0===o&&(o=new t(50,50)),this._position=i,this.mass=s,this.stiffness=e,this.damping=n,this.size=o,this.springs=[],this._velocity=new t}return Object.defineProperty(i.prototype,"position",{get:function(){return this._position},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"velocity",{get:function(){return this._velocity},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"left",{get:function(){return this._position.x-this.size.x/2},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"right",{get:function(){return this._position.x+this.size.x/2},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"top",{get:function(){return this._position.y-this.size.y/2},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"bottom",{get:function(){return this._position.y+this.size.y/2},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"minSize",{get:function(){return Math.min(this.size.x,this.size.y)},enumerable:!1,configurable:!0}),i.prototype.addSpring=function(t){this.springs.push(t)},i.prototype.update=function(i,s,e){var n=this,o=new t;o.add(new t(0,this.mass*e)),this.springs.forEach((function(t){o.add(t.getElasticForce(n)),o.add(t.getDampingForce(n))}));var r=o.times(1/this.mass);this._velocity.add(r.times(s)),this._position.add(this._velocity.times(s))},i.prototype.draw=function(t){t.strokeStyle="black",t.beginPath(),t.roundRect(this.left,this.top,this.size.x,this.size.y,this.minSize/5),t.fill()},i}(),s=function(){function i(i,s,e,n,o){void 0===e&&(e=200),void 0===n&&(n=1e-4),void 0===o&&(o=.001),this.mass1=i,this.mass2=s,this.naturalLength=e,this.stiffness=n,this.damping=o,this.length=0,this.relativePos=new t,this.elasticForce=new t,this.dampingForce=new t,this.defaultWidth=10,this.update()}return i.prototype.getElasticForce=function(t){return t===this.mass2?this.elasticForce:this.elasticForce.times(-1)},i.prototype.getDampingForce=function(t){return t===this.mass2?this.dampingForce:this.dampingForce.times(-1)},i.prototype.update=function(){this.relativePos=this.mass1.position.minus(this.mass2.position),this.length=this.relativePos.length();var t=this.relativePos.normalize();this.elasticForce=t.times((this.length-this.naturalLength)*this.stiffness);var i=this.mass1.velocity.minus(this.mass2.velocity).dot(t);this.dampingForce=t.times(i*this.damping)},i.prototype.draw=function(t){t.beginPath(),t.moveTo(this.mass1.position.x,this.mass1.position.y),t.lineTo(this.mass2.position.x,this.mass2.position.y),t.lineWidth=Math.min(this.defaultWidth*this.naturalLength/this.length,this.mass1.minSize,this.mass2.minSize),t.strokeStyle="gray",t.stroke()},i}(),e=function(){function t(t){this.canvas=t,this.gravity=0,this.ctx=t.getContext("2d"),this.lastTime=0,this.deltaTime=0,this.masses=[],this.springs=[]}return t.prototype.addMass=function(t){this.masses.push(t)},t.prototype.addSpring=function(t){this.springs.push(t),t.mass1.addSpring(t),t.mass2.addSpring(t)},t.prototype.start=function(){requestAnimationFrame(this.mainLoop.bind(this))},t.prototype.mainLoop=function(t){this.deltaTime=t-this.lastTime,this.lastTime=t,this.update(this.deltaTime),this.draw(),requestAnimationFrame(this.mainLoop.bind(this))},t.prototype.update=function(t){var i=this;console.log("Update!"),this.masses.forEach((function(s){return s.update(i.canvas,t,i.gravity)})),this.springs.forEach((function(t){return t.update()}))},t.prototype.draw=function(){var t=this;this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.springs.forEach((function(i){return i.draw(t.ctx)})),this.masses.forEach((function(i){return i.draw(t.ctx)}))},t}(),n=document.getElementById("canvas");function o(){n.width=window.innerWidth,n.height=window.innerHeight}window.addEventListener("resize",o),o();var r=new e(n),h=new i;r.addMass(h);var a=new i(new t(300,300));r.addMass(a);var p=new s(h,a);r.addSpring(p),r.start()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,